<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sp.mapper.UserMapper">

    <!-- 自定义映射规则：resultMap 标签来完成映射规则的定义
        id属性：标签给这个映射负责分配一个唯一的id值，对应的就是resultMap=“id属性的值”属性的取值
        type属性：取值是一个类，表示的是数据库中的查询结果与Java中哪个实体类进行结果集映射
    -->
    <resultMap id="UserEntityMap" type="com.sp.entity.User">
        <!-- 将表的资源和类的属性不一致的字段进行匹配指定，名称一致的字段可以省略不写
            配合完成名称不一致的映射；
            column属性：表示表中的资源名称
            property属性：表示类中的属性名称
        -->
        <!--        在定义映射规则时主键是不可以省略的-->
        <id column="uid" property="uid"></id>
        <result column="is_delete" property="isDelete"></result>
        <result column="created_user" property="createdUser"></result>
        <result column="created_time" property="createdTime"></result>
        <result column="modified_user" property="modifiedUser"></result>
        <result column="modified_time" property="modifiedTime"></result>
    </resultMap>

    <sql id="Base_Colum_List">uid,username,password,salt,phone,email,gender,avatar,is_delete,created_user,created_time,modified_user,modified_time</sql>

    <!--id属性：表示映射的接口中方法的名称，直接再标签的内容部来编写SQL语句-->
    <!--
        useGeneratedKeys属性：表示开启某个字段的值递增(主键设置为递增)
        keyProperty属性：标签将表中的哪个字段作为主键惊醒递增
    -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid" parameterType="com.sp.entity.User">
        INSERT INTO t_user(
        <include refid="Base_Colum_List"/>
        )VALUES(
        #{uid},#{username},#{password},#{salt},
        #{phone},#{email},#{email},#{avatar},
        #{isDelete},
        #{createdUser},#{createdTime},
        #{modifiedUser},#{modifiedTime}
        )
    </insert>

    <select id="findByUsername" parameterType="string" resultType="com.sp.entity.User">
        SELECT * FROM t_user WHERE username = #{username}
    </select>

    <update id="updatePasswordByUid">
        UPDATE t_user SET
            password = #{password},
            modified_user = #{modifiedUser},modified_time = #{modifiedTime}
        WHERE uid = #{uid}
    </update>

    <select id="findByUid" resultType="com.sp.entity.User">
        SELECT * FROM t_user WHERE uid=#{uid}
    </select>

    <update id="updateInfoByUid">
        UPDATE t_user SET
        <if test="phone!=null">phone = #{phone},</if>
        <if test="email!=null">email = #{email},</if>
        <if test="gender!=null">gender = #{gender},</if>
        modified_user = #{modifiedUser},modified_time = #{modifiedTime}
        WHERE uid = #{uid}
    </update>

    <update id="updateAvatarByUid">
        UPDATE t_user SET
        avatar = #{avatar},
        modified_user = #{modifiedUser},modified_time = #{modifiedTime}
        WHERE uid = #{uid}
    </update>

</mapper>